#!/bin/bash

set -e

ssh_key_name="ethereum-raft-demo.pem"

die() {
    echo >&2 "$@"
    exit 1
}

print_usage() {
    die "usage: $0 [plan|apply|show|console|refresh|destroy|output[ output-name]|taint resource-name|untaint resource-name]"
}

check_ssh_key() {
    ssh-add -l | grep "${ssh_key_name}" >/dev/null
}

add_ssh_key() {
    echo "SSH key not found in agent. trying to use ssh-add to add ${ssh_key_name}..."
    ssh-add "../credentials/${ssh_key_name}"
}

[ "$#" -eq 0 ] && print_usage

check_ssh_key || add_ssh_key

# Set up variables

bin_name=$(basename $0)
bin_components=(${bin_name//-/ }) # Split binary name on a dash
num_components=${#bin_components[@]}

if [ ${num_components} -eq 2 ]
then
    env_name=${bin_components[0]}
    region=${bin_components[1]}
    state_file="$(pwd)/state/${env_name}-${region}.tfstate"
    var_file_flag="-var-file $(pwd)/multi-region-vars/${region}.tfvars"
else
    env_name=${bin_name}
    state_file="$(pwd)/state/${env_name}.tfstate"
    var_file_flag=""

    if [[ "${env_name}" == "global" ]]
    then
        cd global
    fi
fi

# Process command

if [[ "$1" == "plan" || "$1" == "apply" || "$1" == "destroy" || "$1" == "console" || "$1" == "refresh" ]]
then
    terraform $1 -var "env=${env_name}" ${var_file_flag} -state ${state_file}
elif [[ "$1" == "output" || "$1" == "taint" || "$1" == "untaint" ]]
then
    terraform $1 -state ${state_file} $2
elif [[ "$1" == "show" ]]
then
    terraform show ${state_file}
else
    print_usage
fi
